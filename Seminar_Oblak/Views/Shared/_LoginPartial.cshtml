@using Microsoft.AspNetCore.Identity
@using Seminar_Oblak.Models.Dbo
@using Seminar_Oblak.Services.Implemetation
@using Seminar_Oblak.Services.Interface
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User);

}


    @if (user != null)
    {


        var userRoles = await UserManager.GetRolesAsync(user);
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @user.Firstname @user.Lastname!</a>
        </li>

        @switch (userRoles[0])
        {
            case Roles.Admin:
                <li class="nav-item">
                    <a class="nav-link text-dark" href="@Url.Action("AdministratorControl", "Admin")">Administracija proizvoda</a>

                </li>             
                break;
            case Roles.Employee:
            case Roles.BasicUser:              
                break;
        }






        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {


        <li class="nav-item">
            <a class="nav-link text-dark" href="@Url.Action("Registration", "User")">Registracija</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
