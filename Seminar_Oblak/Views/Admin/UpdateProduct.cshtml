@model Seminar_Oblak.Models.Binding.ProductUpdateBinding
@using Seminar_Oblak.Services.Interface
@inject IProductService productService;


@{
    ViewData["Title"] = "UpdateProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var categorys = await productService.GetProductCategorysAsync();
   }

<h1>Update Product</h1>

<h4>Fill out the form</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateProduct">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                @*               <input asp-for="Quantity" class="form-control" />*@
                <input type="number" step=".01" name="Quantity" class="form-control" value="@Model.Quantity.ToString().Replace(",",".")" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                @*        <input asp-for="Price"  type="number"  class="form-control" />*@
                <input type="number" step="any"  name="Price" class="form-control"  value="@Model.Price.ToString().Replace(",",".")" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ProductCategoryId" class="control-label"> Select Category </label>
                <select name="ProductCategoryId" class="form-select" aria-label="Default select example">
                    @foreach (var item in categorys)
                    {
                        if (item.Id == Model.ProductCategory.Id)
                        {
                                                    <option selected value="@item.Id">@item.Title</option>
                        }
                        else
                        {
                                                      <option  value="@item.Id">@item.Title</option>
                        }

                    }
                </select>
            </div>



            <div class="form-group">
                <input type="submit" value="Apply" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="ProductAdministration">Back </a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
